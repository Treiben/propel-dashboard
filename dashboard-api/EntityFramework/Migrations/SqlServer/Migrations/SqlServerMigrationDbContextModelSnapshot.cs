// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Propel.FeatureFlags.Dashboard.Api.EntityFramework.Migrations.SqlServer;

#nullable disable

namespace Propel.FeatureFlags.Dashboard.Api.EntityFramework.Migrations.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerMigrationDbContext))]
    partial class SqlServerMigrationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Propel.FeatureFlags.Dashboard.Api.EntityFramework.Entities.FeatureFlag", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Key");

                    b.Property<string>("ApplicationName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("global")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("ApplicationVersion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("0.0.0.0")
                        .HasColumnName("ApplicationVersion");

                    b.Property<string>("DefaultVariation")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("off")
                        .HasColumnName("DefaultVariation");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("")
                        .HasColumnName("Description");

                    b.Property<string>("DisabledTenants")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("DisabledTenants");

                    b.Property<string>("DisabledUsers")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("DisabledUsers");

                    b.Property<string>("EnabledTenants")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("EnabledTenants");

                    b.Property<string>("EnabledUsers")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("EnabledUsers");

                    b.Property<string>("EvaluationModes")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("EvaluationModes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Name");

                    b.Property<DateTimeOffset?>("ScheduledDisableDate")
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("ScheduledDisableDate");

                    b.Property<DateTimeOffset?>("ScheduledEnableDate")
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("ScheduledEnableDate");

                    b.Property<int>("Scope")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Scope");

                    b.Property<string>("TargetingRules")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("TargetingRules");

                    b.Property<int>("TenantPercentageEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(100)
                        .HasColumnName("TenantPercentageEnabled");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TimeZone");

                    b.Property<int>("UserPercentageEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(100)
                        .HasColumnName("UserPercentageEnabled");

                    b.Property<string>("Variations")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("{}")
                        .HasColumnName("Variations");

                    b.Property<string>("WindowDays")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("[]")
                        .HasColumnName("WindowDays");

                    b.Property<TimeOnly?>("WindowEndTime")
                        .HasColumnType("TIME")
                        .HasColumnName("WindowEndTime");

                    b.Property<TimeOnly?>("WindowStartTime")
                        .HasColumnType("TIME")
                        .HasColumnName("WindowStartTime");

                    b.HasKey("Key", "ApplicationName", "ApplicationVersion");

                    b.ToTable("FeatureFlags", null, t =>
                        {
                            t.HasCheckConstraint("CK_DisabledTenants_json", "ISJSON(DisabledTenants) = 1");

                            t.HasCheckConstraint("CK_DisabledUsers_json", "ISJSON(DisabledUsers) = 1");

                            t.HasCheckConstraint("CK_EnabledTenants_json", "ISJSON(EnabledTenants) = 1");

                            t.HasCheckConstraint("CK_EnabledUsers_json", "ISJSON(EnabledUsers) = 1");

                            t.HasCheckConstraint("CK_EvaluationModes_json", "ISJSON(EvaluationModes) = 1");

                            t.HasCheckConstraint("CK_TargetingRules_json", "ISJSON(TargetingRules) = 1");

                            t.HasCheckConstraint("CK_TenantPercentage", "TenantPercentageEnabled >= 0 AND TenantPercentageEnabled <= 100");

                            t.HasCheckConstraint("CK_UserPercentage", "UserPercentageEnabled >= 0 AND UserPercentageEnabled <= 100");

                            t.HasCheckConstraint("CK_Variations_json", "ISJSON(Variations) = 1");

                            t.HasCheckConstraint("CK_WindowDays_json", "ISJSON(WindowDays) = 1");
                        });
                });

            modelBuilder.Entity("Propel.FeatureFlags.Dashboard.Api.EntityFramework.Entities.FeatureFlagAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Action");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Actor");

                    b.Property<string>("ApplicationName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("global")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("ApplicationVersion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("0.0.0.0")
                        .HasColumnName("ApplicationVersion");

                    b.Property<string>("FlagKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FlagKey");

                    b.Property<string>("Notes")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Notes");

                    b.Property<DateTimeOffset>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("Timestamp")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("FlagKey", "ApplicationName", "ApplicationVersion");

                    b.ToTable("FeatureFlagsAudit", (string)null);
                });

            modelBuilder.Entity("Propel.FeatureFlags.Dashboard.Api.EntityFramework.Entities.FeatureFlagMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("global")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("ApplicationVersion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("0.0.0.0")
                        .HasColumnName("ApplicationVersion");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("ExpirationDate");

                    b.Property<string>("FlagKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FlagKey");

                    b.Property<bool>("IsPermanent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsPermanent");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasDefaultValue("{}")
                        .HasColumnName("Tags");

                    b.HasKey("Id");

                    b.HasIndex("FlagKey", "ApplicationName", "ApplicationVersion")
                        .IsUnique();

                    b.ToTable("FeatureFlagsMetadata", null, t =>
                        {
                            t.HasCheckConstraint("CK_metadata_tags_json", "ISJSON(Tags) = 1");
                        });
                });

            modelBuilder.Entity("Propel.FeatureFlags.Dashboard.Api.EntityFramework.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UserName");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("ForcePasswordChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ForcePasswordChange");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<DateTimeOffset?>("LastLoginAt")
                        .HasColumnType("DATETIMEOFFSET")
                        .HasColumnName("LastLoginAt");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Viewer")
                        .HasColumnName("Role");

                    b.HasKey("Username");

                    b.ToTable("FeatureFlagsUsers", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
