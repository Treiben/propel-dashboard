@Ui_Api_HostAddress_Https = https://localhost:7113
@Ui_Api_HostAddress_Http = http://localhost:5038
@Ui_Api_HostAddress_Docker = http://localhost:5003

### Variables
@baseUrl = {{Ui_Api_HostAddress_Http}}/api
@testFlagKey = test-flag-4851245
@testUserId = user-{{$randomInt}}

### Authentication Tokens
@api_jwt = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IkFwaVNjb3BlVXNlciIsInN1YiI6IkFwaVNjb3BlVXNlciIsImp0aSI6IjNhZWVjZWRlIiwic2NvcGUiOiJmZWF0dXJldG9nZ2xlc21hbmFnZW1lbnRhcGkiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo1MDM4IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzExMyJdLCJuYmYiOjE3NTM1MDAyNjEsImV4cCI6MTc2MTQ0OTA2MSwiaWF0IjoxNzUzNTAwMjYyLCJpc3MiOiJkb3RuZXQtdXNlci1qd3RzIn0.r1u7xaYjgAFoVsx6ddDJLtXIuYWlyUHAQC7UZkjojIw
@readonly_jwt =  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IlJlYWRVc2VyIiwic3ViIjoiUmVhZFVzZXIiLCJqdGkiOiI2MTczNDRlIiwic2NvcGUiOlsiZmVhdHVyZXRvZ2dsZXNtYW5hZ2VtZW50YXBpIiwicmVhZCJdLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo1MDM4IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzExMyJdLCJuYmYiOjE3NTM1MDAzNDgsImV4cCI6MTc2MTQ0OTE0OCwiaWF0IjoxNzUzNTAwMzQ5LCJpc3MiOiJkb3RuZXQtdXNlci1qd3RzIn0.YiW9_-swA8YXVaukSsKiZg-us_3YW0QCGwMtWb-HB4M
@full_access_jwt = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IldyaXRlVXNlciIsInN1YiI6IldyaXRlVXNlciIsImp0aSI6IjkyZjZhNzNmIiwic2NvcGUiOlsiZmVhdHVyZXRvZ2dsZXNtYW5hZ2VtZW50YXBpIiwicmVhZCIsIndyaXRlIl0sImF1ZCI6WyJodHRwOi8vbG9jYWxob3N0OjUwMzgiLCJodHRwczovL2xvY2FsaG9zdDo3MTEzIl0sIm5iZiI6MTc1MzUwMDM3NCwiZXhwIjoxNzYxNDQ5MTc0LCJpYXQiOjE3NTM1MDAzNzQsImlzcyI6ImRvdG5ldC11c2VyLWp3dHMifQ.7_mWTTJ_Jbq1I6Kg65ulyEjTP5mb6VEfhJH1w3iOF0o

@active_token = {{full_access_jwt}}

### 1. Create Feature Flag - Valid Request
# Test: Create a new feature flag with valid data
# Expected: 201 Created with FeatureFlagDto response
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "{{testFlagKey}}",
  "name": "Test Feature Flag",
  "description": "A test feature flag for API testing",
  "status": "Disabled",
  "percentageEnabled": 0,
  "variations": {
    "on": true,
    "off": false
  },
  "defaultVariation": "off",
  "tags": {
    "environment": "test",
    "team": "platform"
  },
  "isPermanent": false
}

###
### 2. Create Feature Flag - Validation Error (Empty Key)
# Test: Verify validation fails for empty key
# Expected: 400 Bad Request with validation problem details
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "",
  "name": "Invalid Flag",
  "description": "Should fail validation"
}

###
### 3. Create Feature Flag - Conflict (Duplicate Key)
# Test: Verify conflict response for duplicate flag key
# Expected: 409 Conflict with problem details about existing flag
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "{{testFlagKey}}",
  "name": "Duplicate Flag",
  "description": "Should conflict with existing flag"
}

###
### 4. Create Flag with Expiration for Testing
# Test: Create flag with expiration date for lifecycle testing
# Expected: 201 Created with FeatureFlagDto including expirationDate
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "expiring-flag-{{$randomInt}}",
  "name": "Expiring Test Flag",
  "description": "This flag will expire soon",
  "expirationDate": "{{$datetime iso8601 3 d}}",
  "status": "Enabled"
}

###
### 5. Create Complex Flag with All Features
# Test: Create flag using all available configuration options
# Expected: 201 Created with comprehensive FeatureFlagDto
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "complex-flag-{{$randomInt}}",
  "name": "Complex Feature Flag",
  "description": "A feature flag with all possible configurations",
  "evaluationModes": [
    "TimeWindow"
  ],
  "expirationDate": "{{$datetime iso8601 30 d}}",
  "windowStartTime": "08:00:00",
  "windowEndTime": "20:00:00",
  "timeZone": "America/New_York",
  "windowDays": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
  "percentageEnabled": 25,
  "targetingRules": [
    {
      "attribute": "userType",
      "operator": "In",
      "values": ["premium", "enterprise"],
      "variation": "premium"
    },
    {
      "attribute": "region",
      "operator": "In",
      "values": ["us-east", "us-west"],
      "variation": "regional"
    }
  ],
  "enabledUsers": ["admin-user", "test-user"],
  "disabledUsers": ["banned-user"],
  "variations": {
    "off": false,
    "basic": "basic-feature",
    "premium": "premium-feature",
    "regional": "regional-feature"
  },
  "defaultVariation": "off",
  "tags": {
    "environment": "production",
    "team": "growth",
    "feature": "advanced",
    "priority": "high"
  },
  "isPermanent": false
}

###
### 6. Test Edge Cases - Very Long Key Validation
# Test: Verify validation fails for key exceeding length limit
# Expected: 400 Bad Request with validation problem details about key length
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "very-long-key-name-that-might-exceed-normal-limits-and-should-be-tested-for-validation-this-should-definitely-be-over-100-characters-{{$randomInt}}",
  "name": "Edge Case Flag",
  "description": "Testing long key validation"
}

###
### 7. Test Edge Cases - Invalid Key Characters
# Test: Verify validation fails for key with special characters
# Expected: 400 Bad Request with validation problem details about allowed characters
POST {{baseUrl}}/feature-flags
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "key": "invalid@key#with$special%characters",
  "name": "Invalid Key Flag",
  "description": "Should fail validation due to special characters"
}