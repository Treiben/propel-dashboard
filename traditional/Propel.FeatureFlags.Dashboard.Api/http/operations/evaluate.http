@Ui_Api_HostAddress_Https = https://localhost:7113
@Ui_Api_HostAddress_Http = http://localhost:5038
@Ui_Api_HostAddress_Docker = http://localhost:5003

### Variables
@baseUrl = {{Ui_Api_HostAddress_Docker}}/api
@testFlagKey = test-flag-4851245
@testUserId = user-{{$randomInt}}

### Authentication Tokens
@api_jwt = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IkFwaVNjb3BlVXNlciIsInN1YiI6IkFwaVNjb3BlVXNlciIsImp0aSI6IjNhZWVjZWRlIiwic2NvcGUiOiJmZWF0dXJldG9nZ2xlc21hbmFnZW1lbnRhcGkiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo1MDM4IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzExMyJdLCJuYmYiOjE3NTM1MDAyNjEsImV4cCI6MTc2MTQ0OTA2MSwiaWF0IjoxNzUzNTAwMjYyLCJpc3MiOiJkb3RuZXQtdXNlci1qd3RzIn0.r1u7xaYjgAFoVsx6ddDJLtXIuYWlyUHAQC7UZkjojIw
@readonly_jwt =  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IlJlYWRVc2VyIiwic3ViIjoiUmVhZFVzZXIiLCJqdGkiOiI2MTczNDRlIiwic2NvcGUiOlsiZmVhdHVyZXRvZ2dsZXNtYW5hZ2VtZW50YXBpIiwicmVhZCJdLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo1MDM4IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzExMyJdLCJuYmYiOjE3NTM1MDAzNDgsImV4cCI6MTc2MTQ0OTE0OCwiaWF0IjoxNzUzNTAwMzQ5LCJpc3MiOiJkb3RuZXQtdXNlci1qd3RzIn0.YiW9_-swA8YXVaukSsKiZg-us_3YW0QCGwMtWb-HB4M
@full_access_jwt = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IldyaXRlVXNlciIsInN1YiI6IldyaXRlVXNlciIsImp0aSI6IjkyZjZhNzNmIiwic2NvcGUiOlsiZmVhdHVyZXRvZ2dsZXNtYW5hZ2VtZW50YXBpIiwicmVhZCIsIndyaXRlIl0sImF1ZCI6WyJodHRwOi8vbG9jYWxob3N0OjUwMzgiLCJodHRwczovL2xvY2FsaG9zdDo3MTEzIl0sIm5iZiI6MTc1MzUwMDM3NCwiZXhwIjoxNzYxNDQ5MTc0LCJpYXQiOjE3NTM1MDAzNzQsImlzcyI6ImRvdG5ldC11c2VyLWp3dHMifQ.7_mWTTJ_Jbq1I6Kg65ulyEjTP5mb6VEfhJH1w3iOF0o

@active_token = {{full_access_jwt}}

###
### 1. Get Expiring Flags - Default (7 days)
# Test: Get flags expiring within default timeframe
# Expected: 200 OK with List<FeatureFlagDto> of flags expiring soon
GET {{baseUrl}}/feature-flags/expiring
Authorization: Bearer {{active_token}}

###
### 2. Get Expiring Flags - Custom Days
# Test: Get flags expiring within custom timeframe
# Expected: 200 OK with List<FeatureFlagDto> of flags expiring within 30 days
GET {{baseUrl}}/feature-flags?expiringInDays=30
Authorization: Bearer {{active_token}}

###
### 3. Evaluate Single Flag - Basic
# Test: Evaluate flag for specific user
# Expected: 200 OK with EvaluationResult
GET {{baseUrl}}/feature-flags/evaluate/{{testFlagKey}}?userId={{testUserId}}
Authorization: Bearer {{active_token}}

###
### 4. Evaluate Single Flag - With Attributes
# Test: Evaluate flag with user attributes for targeting
# Expected: 200 OK with EvaluationResult based on targeting rules
GET {{baseUrl}}/feature-flags/evaluate/{{testFlagKey}}?userId={{testUserId}}&attributes={"department":"engineering","region":"us-west"}
Authorization: Bearer {{active_token}}

###
### 5. Evaluate Single Flag - Invalid Attributes JSON
# Test: Verify validation fails for malformed attributes JSON
# Expected: 400 Bad Request with problem details about JSON format
GET {{baseUrl}}/feature-flags/evaluate/{{testFlagKey}}?userId={{testUserId}}&attributes=invalid-json
Authorization: Bearer {{active_token}}

###
### 6. Evaluate Single Flag - Non-existent Flag
# Test: Verify flag created as default when flag key does not exist
# Expected: 200 flag created as default with EvaluationResult (defaultVariation: "off")
GET {{baseUrl}}/feature-flags/evaluate/non-existent-flag1?userId={{testUserId}}
Authorization: Bearer {{active_token}}

###
### 7. Evaluate Multiple Flags - Valid Request
# Test: Evaluate multiple flags in single request
# Expected: 200 OK with Dictionary<string, EvaluationResult>
POST {{baseUrl}}/feature-flags/evaluate
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "flagKeys": ["{{testFlagKey}}", "another-flag"],
  "userId": "{{testUserId}}",
  "attributes": {
    "department": "engineering",
    "subscription": "premium"
  }
}

###
### 8. Evaluate Multiple Flags - Empty Flag List
# Test: Verify validation fails for empty flag keys list
# Expected: 400 Bad Request with validation problem details
POST {{baseUrl}}/feature-flags/evaluate
Content-Type: application/json
Authorization: Bearer {{active_token}}

{
  "flagKeys": [],
  "userId": "{{testUserId}}"
}
